# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 CESNET.
#
# OARepo Micro API is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.
addons:
  postgresql: 9.6

services:
  - postgresql
  - redis-server

dist: xenial

notifications:
  email: false

sudo: false

language: python

matrix:
  fast_finish: true

cache:
  - pip

env:
  global:
    - POSTGRESQL_SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://postgres@localhost:5432/invenio"
    - ES7_DOWNLOAD_URL="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-linux-x86_64.tar.gz"
    - ES_HOST=127.0.0.1
  matrix:
    - REQUIREMENTS=release OAREPO_VERSION=3.2.1 ES=$ES7_DOWNLOAD_URL SQLALCHEMY_DATABASE_URI=$POSTGRESQL_SQLALCHEMY_DATABASE_URI
    - REQUIREMENTS=release OAREPO_VERSION=3.2.1 ES=$ES7_DOWNLOAD_URL

python:
  - "3.7"
  - "3.8"

before_install:
  - "travis_retry pip install --upgrade pip setuptools py"
  - "travis_retry pip install twine wheel coveralls requirements-builder pip-tools"
  - "requirements-builder -e $EXTRAS --level=pypi setup.py > .travis-release-requirements.in"
  - "pip-compile -U --verbose -o .travis-release-requirements.txt .travis-release-requirements.in"
  - cat .travis-release-requirements.txt
  - mkdir /tmp/elasticsearch
  - wget -O - $ES | tar xz --directory=/tmp/elasticsearch --strip-components=1
  - "/tmp/elasticsearch/bin/elasticsearch &"
  - sleep 10

before_install:
  # Stop default travis services
  - "sudo service mysql stop"
  - "sudo service postgresql stop"
  # Start docker services
  - "docker-compose up -d"
  # Chrome webdriver for Selenium
  - "PATH=$PATH:$HOME/webdrivers"
  - "if [ ${E2E} == 'yes' ] && [ ! -f $HOME/webdrivers/chromedriver ]; then wget https://chromedriver.storage.googleapis.com/2.31/chromedriver_linux64.zip -P $HOME/webdrivers; unzip -d $HOME/webdrivers $HOME/webdrivers/chromedriver_linux64.zip; fi"
  - "nvm install 6; nvm use 6"
  - "travis_retry pip install --upgrade pip setuptools py pipenv"
  - "travis_retry pip install twine wheel coveralls"

install:
  - "travis_retry pip install -r .travis-${REQUIREMENTS}-requirements.txt"

script:
  - ./run-tests.sh

after_success:
  - coveralls

# TODO(mirekys): setup auto publish to pypi
#deploy:
#  provider: pypi
#  user: "__token__"
#  password:
#    secure: ""
#  on:
#    tags: true
#    branch: master
#  distributions: "sdist bdist_wheel"
#  skip_existing: true
